/* ------------------------------------------------------------------------------
 * Copyright (c) 2006 Novell, Inc. All Rights Reserved.
 *
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of version 2 of the GNU General Public License as published by the
 * Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, contact Novell, Inc.
 *
 * To contact Novell about this file by physical or electronic mail, you may find
 * current contact information at www.novell.com.
 * ------------------------------------------------------------------------------
 */

/**
 * File:	include/kdump/dialogs.ycp
 * Package:	Configuration of kdump
 * Summary:	Dialogs definitions
 * Authors:	Jozef Uhliarik <juhliarik@suse.com>
 *
 * $Id: dialogs.ycp 27914 2006-02-13 14:32:08Z locilka $
 */

{

textdomain "kdump";

import "CWM";
import "Label";
import "Wizard";
import "Kdump";
import "DialogTree";
import "CWMTab";

include "kdump/helps.ycp";
include "kdump/uifunctions.ycp";

void DisBackButton (string key) {
  Wizard::SetTitleIcon("yast-kdump");
  UI::ChangeWidget(`id(`back), `Enabled, false);
}




map<string,map<string,any> > wid_handling = $[
  "DisBackButton" 	: $[
     "widget"		: `custom,
     "custom_widget"	: `Empty(),
     "init"		: DisBackButton,
     "help"		: " ",
  ],

/*---------============ Start-up screen=============------------*/

  "EnableDisalbeKdump"	: $[
     //TRANSLATORS: RadioButtonGroup Label
     "label" 		: _("Enable/Disable Kdump"),
     "widget" 		: `radio_buttons,
     "items" 		: [
        ["enable_kdump",  _("Enable Kd&ump")  ],
        ["disable_kdump", _("&Disable Kdump") ],
     ],
     "orientation" 	: `horizontal,
     "init"		: InitEnableDisalbeKdump,
     //"handle"		: HandleEnableDisalbeKdump,
     "store"		: StoreEnableDisalbeKdump,
     "help"		: HelpKdump("StartRadioBut"),

  ],


 "KdumpMemory" 		: $[
     "widget" 		: `custom,
     "custom_widget"	: `HSquash(`VBox(
           `Left(`HBox(
	      `Left(`Label(_("Total System Memory [MB]:"))),
	      `Left(`Label(`id("total_memory"),"0123456789")),
	      `HStretch ()
           )),
           `Left(`HBox(
	      `Left(`Label(_("Usable Memory [MB]:"))),
	      `Left(`Label(`id("usable_memory"),"0123456789")),
	      `HStretch ()
           )),
	   `Left(`IntField(`id("memory_buffer"), `opt(`notify), _("Kdump Memor&y [MB]"),32,1048576,128))
     )),
     "init"		: InitKdumpMemory,
     "handle"		: HandleKdumpMemory,
     "store"		: StoreKdumpMemory,
     "help"		: HelpKdump("KdumpMemory"),
  ],

/*---------============ Dump Filtering screen=============------------*/
 "DumpLevel" 		: $[
     "widget" 		: `custom,
     "custom_widget"	: `VBox(
           `Frame ( _("Include in Dumping"), `VBox(
           `Left(`HBox(`HSpacing(1),`VBox(
	      `Left(`CheckBox(`id("zero_page"),  _("&Pages Filled with Zero"))),
	      `Left(`CheckBox(`id("cache_page"), `opt(`notify), _("Cach&e Pages"))),
              `HBox(`HSpacing(2),`VBox(
	        `Left(`CheckBox(`id("cache_private"), `opt(`notify), _("Cache Priva&te Pages")))
               )),
	      `Left(`CheckBox(`id("user_data"), _("&User Data Pages"))),
	      `Left(`CheckBox(`id("free_page"), _("&Free Pages")))
	      //`VStretch ()
           )))
     ))),
     "init"		: InitDumpLevel,
     "handle"		: HandleDumpLevel,
     "validate_type"    : `function,
     "validate_function": ValidDumpLevel,    
     "store"		: StoreDumpLevel,
     "help"		: HelpKdump("DumpLevel"),
  ],

  "DumpFormat" 	: $[
     //TRANSLATORS: TextEntry Label
     "label" 		: _("&Dump Format"),
     "widget" 		: `radio_buttons,
     "items" 		: [
        ["elf_format",  _("E&LF Format")  ],
        ["compressed_format", _("C&ompressed Format") ],
     ],
     "orientation" 	: `horizontal,
     "init"		: InitDumpFormat,
     "validate_type"    : `function,
     "validate_function": ValidDumpFormat,    
     "store"		: StoreDumpFormat,
     "help"		: HelpKdump("DumpFormat"),
  ],

/*---------============ Dump Target screen=============------------*/

  "TargetKdump"		: $[
     "widget"		: `custom,
     "custom_widget"	: `VBox(
           `Frame(_("Saving Target for Kdump Image"),`HBox(`HSpacing(1),`VBox(
             `RadioButtonGroup(`id("DumpTarget"), `HBox(
	        `Left(`RadioButton(`id("local_filesystem"), `opt(`notify), "&Local Filesytem")),
                `Left(`RadioButton(`id("ftp"), `opt(`notify), "F&TP")),
       		`Left(`RadioButton(`id("ssh"), `opt(`notify), "&SSH (scp)")),
       		`Left(`RadioButton(`id("nfs"), `opt(`notify), "N&FS")),
       		`Left(`RadioButton(`id("cifs"), `opt(`notify), "C&IFS (SMB)"))
             ))
             
           ))),

           `VSpacing(1),
           `ReplacePoint(`id("Targets"), ftp)
           //`VStretch()								    
     ),
     "init"		: InitTargetKdump,
     "handle"		: HandleTargetKdump,
     "validate_type"    : `function,
     "validate_function": ValidTargetKdump,
     "store"		: StoreTargetKdump,
     "help"		: HelpKdump("TargetKdump"),

  ], 

 "RawPartitions" 	: $[
     //TRANSLATORS: ComboBox Label
     "widget" 		: `custom,
     "custom_widget"	: `VBox(
	`CheckBoxFrame(`id("enable_raw_partitions"),_("Enable Ra&w Saving in Initrd"), false, 
        //`Frame(`id("enable_raw_partitions"),_("Enable Ra&w Saving in Initrd"),
          `HBox(`HSpacing(1),`VBox(
            `Left(`ComboBox(`id("raw_partitions"), 
                    _("The List of A&vailable Raw Partitions of All Disks Without Known Filesystem")))
	  ))
        )
     ),
     "init"		: InitRawPartitions,
     //"handle"		: 
     "store"		: StoreRawPartitions,
     "help"		: HelpKdump("RawPartitions"),
  ],

/*---------============ Expert Settings screen=============------------*/

  "InitrdKernel" 	: $[
     //TRANSLATORS: TextEntry Label
     "label" 		: _("Custom Kdump &Kernel"),
     "widget" 		: `textentry,
     "init"		: InitInitrdKernel,
     //"handle"		: 
     "store"		: StoreInitrdKernel,
     "help"		: HelpKdump("InitrdKernel"),
  ],


  "KdumpCommandLine" 	: $[
     //TRANSLATORS: TextEntry Label
     "label" 		: _("Kdump Co&mmand Line"),
     "widget" 		: `textentry,
     "init"		: InitKdumpCommandLine,
     //"handle"		: 
     "store"		: StoreKdumpCommandLine,
     "help"		: HelpKdump("KdumpCommandLine"),
  ],

  "KdumpCommandLineAppend" 	: $[
     //TRANSLATORS: TextEntry Label
     "label" 		: _("Kdump Command &Line Append"),
     "widget" 		: `textentry,
     "init"		: InitKdumpCommandLineAppend,
     //"handle"		: 
     "store"		: StoreKdumpCommandLineAppend,
     "help"		: HelpKdump("KdumpCommandLineAppend"),
  ],


  "RunLevel" 		: $[
     //TRANSLATORS: ComboBox Label
     "label" 		: _("&The Runlevel to Boot the Kdump Kernel"),
     "widget" 		: `combobox,
     "items" 		: [
        [ "run_level1", _("1 - Single User Mode") ],
        [ "run_level2", _("2 - Local Multiuser Without Remote Network") ],
        [ "run_level3", _("3 - Full Multiuser With Network") ],
        [ "run_level5", _("5 - Full Multiuser With Network and xdm") ],
        [ "run_levelS", _("s - Single User Mode (only one console)") ],
     ],
     "init"		: InitRunLevel,
     //"handle"		: 
     "store"		: StoreRunLevel,
     "help"		: HelpKdump("RunLevel"),
  ],

 "EnableReboot" 	: $[
     //TRANSLATORS: CheckBox Label
     "label" 		: _("&Enable Immediate Reboot After Saving the Core"),
     "widget" 		: `checkbox,
     "init"		: InitEnableReboot,
     //"handle"		: 
     "store"		: StoreEnableReboot,
     "help"		: HelpKdump("EnableReboot"),
  ],


  "EnableDeleteImages" : $[
     //TRANSLATORS: CheckBox Label
     "label" 		: _("Enable &Delete Old Dump Images"),
     "widget" 		: `checkbox,
     "init"		: InitEnableDeleteImages,
     "handle"		: HandleEnableDeleteImages,
     "store"		: StoreEnableDeleteImages,
     "help"		: HelpKdump("EnableDeleteImages"),
  ],

  "NumberDumps"		: $[
     //TRANSLATORS: IntField Label
     "label" 		: _("N&umber of Old Dumps"),
     "widget" 		: `intfield,
     "minimum" 		: 0,
     "maximum" 		: 10,
     "init"		: InitNumberDumps,
     //"handle"		: 
     "store"		: StoreNumberDumps,
     "help"		: HelpKdump("NumberDumps"),
  ],

];

map<string, map<string,any> > tabs = $[
  
  "start_up"	: $[
     "contents"		: `VBox(
  	"EnableDisalbeKdump",
	
	//`VStretch ()
        `VSpacing(1),
        
	`Frame ( _("Kdump Memory"),`HBox(`HSpacing(1),`VBox(
          `Left("KdumpMemory") 
        ))),
	`VStretch ()
     ),
     "caption"		: _("Kdump Start-Up"),
     "tree_item_label"	: _("Start-Up"),
     "widget_names"	: [
        "DisBackButton", "EnableDisalbeKdump", "KdumpMemory",
     ],    
  ],

  "dump_filtering"	: $[
     "contents"		: `VBox(     	
        "DumpLevel",
        `VSpacing(1),
        "DumpFormat",
	`VStretch ()
     ),
     "caption"		: _("Kdump - Dump Filtering"),
     "tree_item_label"	: _("Dump Filtering"),
     "widget_names"	: [ 
        "DisBackButton", "DumpLevel", "DumpFormat",
     ]    
  ],



  "dump_target"	: $[
     "contents"		: `VBox(
     	"TargetKdump",
        `VSpacing(1),
        "RawPartitions",          
        `VStretch ()
     ),
     "caption"		: _("Dump Target"),
     "tree_item_label"	: _("Dump Target"),
     "widget_names"	: [ 
        "DisBackButton", "TargetKdump","RawPartitions"
     ]    
  ],
  
  "exp_settings" 	: $[
     "contents"		: `VBox(
        `Frame ( _("Custom Kernel for Kdump"),`HBox(`HSpacing(1),`VBox(          
          `Left("InitrdKernel")            
        ))),
	`VSpacing(1),
	`Frame ( _("Command Line"),`HBox(`HSpacing(1),`VBox(
          `Left("KdumpCommandLine"),
	  `Left("KdumpCommandLineAppend")      
        ))),
        `VSpacing(1),
        `Frame ( _("The Runlevel to Boot"),`HBox(`HSpacing(1),`VBox(
          `Left(`HBox(
            `Left("RunLevel"), 
	    `VBox(
              `Label(""),
              `Left("EnableReboot")
            ),          
	    `HStretch ()
          ))
        ))),

        `VSpacing(1),        
        `Frame ( _("Number of Dumps"),`HBox(`HSpacing(1),`VBox(
           `Left("EnableDeleteImages"),
	   `Left("NumberDumps")
        ))),

               
        

  	`VStretch ()
     ),
     "caption"		: _("Kdump Expert Settings"),
     "tree_item_label"	: _("Expert Settings"),
     "widget_names"	: [
        "DisBackButton", "KdumpCommandLine",
        "KdumpCommandLineAppend", "RunLevel",
        "EnableDeleteImages", "NumberDumps", 
        "InitrdKernel", "SelectKernel", "EnableReboot"
     ]    
  ],

];

symbol RunKdumpDialogs() {
  list<string> sim_dialogs = [ "start_up", "dump_filtering", "dump_target" ,"exp_settings"];

  return DialogTree::ShowAndRun ($[ 
  //return CWMTab::CreateWidget($[ 
    "ids_order"		: sim_dialogs,
    "initial_screen"	: "start_up",
    "screens"		: tabs,
    "widget_descr"	: wid_handling,
    "back_button"	: Label::BackButton(),
    "abort_button"	: Label::AbortButton(),
    "next_button"	: Label::AcceptButton(),
    //"functions"	: " ",
  ]);
}


/* EOF */
}
